{"version":3,"file":"renderer.js","sources":["../../markup/packages/matcher/lib/matcher.js","../../markup/packages/matcher/lib/helpers.js","../lib/experimental/helpers.js","../lib/experimental/expressions.js","../lib/experimental/composable-list.js","../lib/experimental/block-normalizer.js","../../markup/packages/matcher/lib/segment-matcher.js","../lib/markdown/markdown-segmenter.js","../lib/helpers.js","../lib/experimental/segment-normalizer.js","../lib/normalizer.js","../lib/content/flags.js","../lib/content/content.js","../lib/content/markup.js","../lib/renderer.js"],"sourcesContent":["ï»¿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {MatcherState} from './state.js';\n\n/** Matcher for composable matching */\nexport class Matcher extends RegExp {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{currentMatch?:MatcherExecArray|null, lastMatch?:MatcherExecArray|null}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze(\n        Object.assign((entities = (entities && Symbol.iterator in entities && [...entities]) || []), {\n          flags,\n          meta: Matcher.metaEntitiesFrom(entities),\n          identities: Matcher.identityEntitiesFrom(entities),\n        }),\n      );\n\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    this.state = state;\n    this.exec = this.exec;\n    this.capture = this.capture;\n\n    ({DELIMITER: this.DELIMITER = Matcher.DELIMITER, UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN} = new.target);\n  }\n\n  /** @param {MatcherExecArray} match */\n  capture(match) {\n    // @ts-ignore\n    if (match === null) {\n      if (this.state) this.state.lastMatch = this.state.currentMatch = null;\n      return;\n    }\n\n    if (this.state) this.state.currentMatch = match;\n\n    // @ts-ignore\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n\n    this.state.lastMatch = match;\n    this.state.currentMatch = null;\n\n    return match;\n  }\n\n  /** @param {string} source */\n  exec(source) {\n    const match = /** @type {MatcherExecArray} */ (super.exec(source));\n    match == null || this.capture(match);\n    return match;\n  }\n\n  /** @param {string} source */\n  matchAll(source) {\n    return /** @type {typeof Matcher} */ (this.constructor).matchAll(source, /** @type {any} */ (this));\n  }\n\n  /** @returns {entity is MatcherMetaEntity} */\n  static isMetaEntity(entity) {\n    return typeof entity === 'string' && entity.endsWith('?');\n  }\n\n  /** @returns {entity is MatcherIdentityEntity} */\n  static isIdentityEntity(entity) {\n    return typeof entity === 'string'\n      ? entity !== '' && entity.trim() === entity && !entity.endsWith('?')\n      : typeof entity === 'symbol';\n  }\n\n  static metaEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherMetaEntity>} */ (new Set([...entities].filter(Matcher.isMetaEntity)));\n  }\n\n  static identityEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherIdentityEntity>} */ (new Set(\n      [...entities].filter(Matcher.isIdentityEntity),\n    ));\n  }\n\n  /**\n   * @param {MatcherPatternFactory} factory\n   * @param {MatcherFlags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        //@ts-ignore\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    entities.meta = Matcher.metaEntitiesFrom(entities);\n    entities.identities = Matcher.identityEntitiesFrom(entities);\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags, iterative, sourceFlags;\n    flags = '';\n    for (const source of sources) {\n      sourceFlags =\n        (!!source &&\n          (typeof source === 'string'\n            ? source\n            : typeof source === 'object' &&\n              typeof source.flags !== 'string' &&\n              typeof source.source === 'string' &&\n              source.flags)) ||\n        undefined;\n      if (!sourceFlags) continue;\n      for (const flag of sourceFlags)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    // const sequence = (template, ...spans) =>\n    //   sequence.WHITESPACE[replace](sequence.COMMENTS[replace](raw(template, ...spans.map(sequence.span)), ''), '');\n\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        typeof value !== 'symbol' &&\n        `${value}`) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n    // sequence.COMMENTS = /(?:^|\\n)\\s*\\/\\/.*(?=\\n)|\\n\\s*\\/\\/.*(?:\\n\\s*)*$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) => values.map(sequence.span).filter(Boolean).join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n\n  static get matchAll() {\n    /** @template {RegExp} T @type {(string: MatcherText, matcher: T) => MatcherIterator<T> } */\n    // const matchAll = (string, matcher) => new MatcherState(string, matcher);\n    const matchAll = (() =>\n      // TODO: Find a cleaner way to reference RegExp.prototype[Symbol.matchAll]\n      Function.call.bind(\n        String.prototype.matchAll || // TODO: Uncomment eventually\n          {\n            /**\n             * @this {string}\n             * @param {RegExp | string} pattern\n             */\n            *matchAll() {\n              const matcher =\n                arguments[0] &&\n                (arguments[0] instanceof RegExp\n                  ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                  : RegExp(arguments[0], 'g'));\n              const string = String(this);\n\n              if (!(matcher.flags.includes('g') || matcher.flags.includes('y')))\n                return void (yield matcher.exec(string));\n\n              for (\n                let match, lastIndex = -1;\n                lastIndex <\n                ((match = matcher.exec(string))\n                  ? (lastIndex = matcher.lastIndex + (match[0].length === 0))\n                  : lastIndex);\n                yield match, matcher.lastIndex = lastIndex\n              );\n            },\n          }.matchAll,\n      ))();\n\n    Object.defineProperty(Matcher, 'matchAll', {value: Object.freeze(matchAll), enumerable: true, writable: false});\n\n    return matchAll;\n  }\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @param {T & V} matcher\n   * @param {U} [instance]\n   * @returns {U & V}\n   */\n  static clone(matcher, instance) {\n    const {\n      constructor: {prototype},\n      source,\n      flags,\n      lastIndex,\n      ...properties\n    } = matcher;\n    const clone = /** @type {U & V} */ (Object.assign(\n      instance ||\n        (prototype && 'source' in prototype && 'flags' in prototype\n          ? RegExp(source, flags || 'g')\n          : RegExp(matcher, 'g')),\n      properties,\n    ));\n    // prototype && Object.setPrototypeOf(clone, prototype);\n    Object.setPrototypeOf(\n      clone,\n      prototype || (this && this !== Matcher && this.prototype instanceof Matcher ? this.prototype : Matcher.prototype),\n    );\n    return clone;\n  }\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenMatcherState} [state]\n   * @returns {TokenMatcher}\n   */\n  static create(matcher, state) {\n    /** @type {typeof Matcher} */\n    const Species = !this || this === Matcher || !(this.prototype instanceof Matcher) ? Matcher : this;\n\n    return Object.defineProperty(\n      ((\n        state || (state = Object.create(null))\n      ).matcher = /** @type {typeof Matcher} */ (matcher &&\n      matcher instanceof RegExp &&\n      matcher.constructor &&\n      'function' !== typeof (/** @type {typeof Matcher} */ (matcher.constructor).clone) // prettier-ignore\n        ? matcher.constructor\n        : Species === Matcher || typeof Species.clone !== 'function'\n        ? Matcher\n        : Species).clone(matcher)),\n      'state',\n      {value: state},\n    );\n  }\n}\n\n// Well-known identities for meaningful debugging which are\n//   Strings but could possible be changed to Symbols\n//\n//   TODO: Revisit Matcher.UNKOWN\n//\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  DELIMITER = (Matcher.DELIMITER = Matcher.prototype.DELIMITER = /** @type {MatcherIdentityString} */ ('DELIMITER?')),\n  /** Identity for unknown captures */\n  UNKNOWN = (Matcher.UNKNOWN = Matcher.prototype.UNKNOWN = /** @type {MatcherIdentityString} */ ('UNKNOWN?')),\n} = Matcher;\n","ï»¿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\n\nexport const {\n  escape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n  join,\n  sequence,\n  matchAll,\n} = Matcher;\n","ï»¿// @ts-check\n\nexport const {atoms, range} = (() => {\n  const {freeze} = Object;\n\n  /** @template {string} T @param {...T} strings */\n  const atoms = (...strings) => freeze(strings); // .filter(atoms.filter).sort()\n\n  atoms.filter = string => typeof string === 'string' && string.length;\n\n  /** @param {string} string @param {string} [delimiter] */\n  atoms.split = (string, delimiter = '') => freeze(string.split(delimiter));\n  /**\n   * Splits a string into case-distinct subsets as applicable.\n   *\n   * NOTE: A non-case-senstive string yields the single\n   *       subset instance for all its cases. A fully cased\n   *       string yields separate upper and lower case subsets\n   *       and a single subset for both initial and any cases.\n   *\n   * @param {string} string @param {string} [delimiter]\n   */\n  atoms.split.cases = (string, delimiter = '') => {\n    /** Ordered array of every unique original cased atom in the original string */\n    const initialCase = freeze(atoms.union(...atoms.split(string, delimiter)));\n\n    const lowerCaseString = string.toLowerCase();\n    const upperCaseString = string.toUpperCase();\n\n    if (lowerCaseString === upperCaseString) return [initialCase, initialCase, initialCase, initialCase];\n\n    /** Ordered array of every unique original and transformed cased atom in the original string */\n    const everyCase = freeze(\n      atoms.union(...atoms.split(`${string}${delimiter}${lowerCaseString}${delimiter}${upperCaseString}`, delimiter)),\n    );\n\n    /** Ordered array of every unique lower cased atom in the original string */\n    const lowerCase = freeze(atoms.union(...atoms.split(lowerCaseString, delimiter)));\n\n    /** Ordered array of every unique upper cased atom in the original string */\n    const upperCase = freeze(atoms.union(...atoms.split(upperCaseString, delimiter)));\n\n    return everyCase.length === initialCase.length\n      ? [initialCase, lowerCase, upperCase, initialCase]\n      : [everyCase, lowerCase, upperCase, initialCase];\n  };\n\n  /** @template {string} T @param {...T} atoms @returns T[] */\n  atoms.union = (...atoms) => [...new Set(atoms)];\n\n  /** @template {string} T @param {...T} atoms @returns {string} */\n  const range = (...atoms) => `[${atoms.map(range.escape).join('')}]`;\n  range.escape = (atom, index) =>\n    atom === ']' ? '\\\\]' : atom === '\\\\' ? '\\\\\\\\' : atom === '-' && index !== 0 ? '\\\\-' : atom;\n\n  return {freeze, atoms, range};\n})();\n\n/** @param {string} inset */\nexport const countInsetQuotes = inset => {\n  /** @type {number} */\n  let quotes, position;\n  position = -1;\n  quotes = 0;\n  while (position++ < (position = inset.indexOf('>', position))) quotes++;\n  return quotes;\n};\n\nexport const MATCHES = Symbol('matches');\nexport const MATCH = Symbol('match');\n\n// /** @param {string} string */\n// const upper = string => string.toUpperCase();\n// /** @param {string} string */\n// const lower = string => string.toLowerCase();\n","ï»¿// @ts-check\n/// <reference path=\"../global.d.ts\" />\n\nimport {Matcher} from '/markup/packages/matcher/matcher.js';\n\nimport {atoms, range} from './helpers.js';\n\n/** Arrays of isolated characters */\nexport const ranges = {};\n\n/** Strings forms of partial recursive expressions */\nexport const sequences = {};\n\n/** Recursive expressions intended to search for qualified substring */\nexport const matchers = {};\n\n/** Isolated expressions intended to test a qualified string */\nexport const patterns = {};\n\n/** Strings forms of partial isolated expressions */\nexport const partials = {};\n\n{\n  ranges.Brackets = atoms.split('()[]');\n  ranges.Braces = atoms.split('{}');\n\n  Insets: {\n    ranges.Inseter = atoms.split('\\t >'); // 0=tab 1=space 2=quote\n    partials.Inset = range(...ranges.Inseter);\n  }\n\n  Fences: {\n    // NOTE: Ambiguities when testing if `~` is meant for\n    //\t\t\t fencing or strikethrough here make it harder\n    //\t\t\t to retain intent and traceablility.\n    ranges.FenceMarks = atoms.split('`'); // 0=grave 1=tilde\n    partials.BlockFence = Matcher.join(...ranges.FenceMarks.map(fence => Matcher.escape(fence.repeat(3))));\n  }\n\n  Lists: {\n    ranges.ListMarkers = atoms.split('-*'); // 0=square 1=disc\n    [ranges.CheckMarks, ranges.LowerCheckMarks, ranges.UpperCheckMarks] = atoms.split.cases(' x-'); // 0=unchecked 1=checked 2=indeterminate\n    ranges.NumberingSeparators = atoms.split('.)');\n    ranges.ArabicNumbers = atoms.split('0123456789');\n    // NOTE: Ambiguities when testing if `i.` is roman or\n    //       latin require temporary restrictions in favor\n    //       of the more popular latin form.\n    //\n    //       Only the subset of ['i', 'v', 'x', 'l'] is\n    //       used which excludes ['c', 'd', 'm'].\n    [ranges.RomanNumerals, ranges.LowerRomanNumerals, ranges.UpperRomanNumerals] = atoms.split.cases('ivxl');\n    [ranges.LatinLetters, ranges.LowerLatinLetters, ranges.UpperLatinLetters] = atoms.split.cases(\n      'abcdefghijklmnopqrstuvwxyz',\n    );\n\n    // Unordered lists are broken into two distinct classes:\n    //\n    //   NOTE: Markers are not semantically interchangeable\n    //\n    //   1. Matching Square character (ie `-` per popular notation):\n    partials.SquareMark = Matcher.escape(ranges.ListMarkers[0]);\n    //\n    //   2. Matching Disc character (ie `*` per lesser popular notation):\n    partials.DiscMark = Matcher.escape(ranges.ListMarkers[1]);\n    //\n    //   Unordered mark is the range of Square/Disc characters:\n    partials.UnorderedMark = range(...ranges.ListMarkers);\n\n    partials.NumberingSeparator = range(...ranges.NumberingSeparators);\n\n    // Ordered lists are broken into three distinct classes:\n    //\n    //   NOTE: Ordered markers include both numbering and trailing sparator.\n    //\n    //   1. Matching Decimal characters (one or more with leading zeros)\n    //        NOTE: lookahead is necessary to exclude matching just zero(s)\n    partials.ArabicNumbering = Matcher.sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n      ...ranges.ArabicNumbers.slice(1),\n    )})${range(...ranges.ArabicNumbers)}+`;\n    //\n    //      Matching Zero-leading Decimal characters (two or more):\n    //        NOTE: lookahead is necessary to exclude matching just zero(s)\n    partials.ZeroLeadingArabicNumbering = Matcher.sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n      ...ranges.ArabicNumbers.slice(1),\n    )})${range(...ranges.ArabicNumbers)}{2,}`;\n    //\n    //      Matching Decimal marker (with any separator):\n    partials.ArabicMarker = Matcher.sequence`${partials.ArabicNumbering}${partials.NumberingSeparator}`;\n    //\n    //      Matching Zero-leading Decimal marker (with any separator):\n    partials.ZeroLeadingArabicMarker = Matcher.sequence`${partials.ZeroLeadingArabicNumbering}${partials.NumberingSeparator}`;\n    //\n    //   2. Matching Latin character (one only)\n    partials.LatinNumbering = range(...ranges.LatinLetters);\n    partials.LowerLatinNumbering = range(...ranges.LowerLatinLetters);\n    partials.UpperLatinNumbering = range(...ranges.UpperLatinLetters);\n    //\n    //      Matching Latin marker (with any separator):\n    partials.LatinMarker = Matcher.sequence`${partials.LatinNumbering}${partials.NumberingSeparator}`;\n    partials.LowerLatinMarker = Matcher.sequence`${partials.LowerLatinNumbering}${partials.NumberingSeparator}`;\n    partials.UpperLatinMarker = Matcher.sequence`${partials.UpperLatinNumbering}${partials.NumberingSeparator}`;\n    //\n    //   3. Matching Roman characters (one or more of the premitted subset)\n    partials.RomanNumbering = Matcher.sequence`${range(...ranges.RomanNumerals)}+`;\n    partials.LowerRomanNumbering = Matcher.sequence`${range(...ranges.LowerRomanNumerals)}+`;\n    partials.UpperRomanNumbering = Matcher.sequence`${range(...ranges.UpperRomanNumerals)}+`;\n    //\n    //      Matching Roman marker (also with trailing \"period\" separator)\n    partials.RomanMarker = Matcher.sequence`${partials.RomanNumbering}\\.`;\n    partials.LowerRomanMarker = Matcher.sequence`${partials.LowerRomanNumbering}\\.`;\n    partials.UpperRomanMarker = Matcher.sequence`${partials.UpperRomanNumbering}\\.`;\n    //\n    //   Ordered marker is the union of Decimal/Latin/Roman partials:\n    partials.OrderedMarker = Matcher.sequence`${Matcher.join(\n      partials.ArabicMarker,\n      partials.LatinMarker,\n      partials.RomanMarker,\n    )}`;\n\n    // Checklists are extensions of unordered lists:\n    //\n    //   NOTE: Markout adds an additional `[-]` indeterminate state\n    //\n    //   a. Matching Enclosed character (without any brackets)\n    partials.CheckMark = range(...ranges.CheckMarks);\n    //\n    //   b. Matching Enclosure characters (with enclosing brackets)\n    partials.Checkbox = Matcher.sequence`\\[${partials.CheckMark}\\]`;\n    //\n    //   Checklist marker is space-separated Unordered marker and Checkbox:\n    partials.ChecklistMarker = Matcher.sequence`${partials.UnorderedMark} ${partials.Checkbox}`;\n\n    // Matching list markers is done in two ways:\n    //\n    //   1. Matching head portion (ie excluding the checkbox)\n    partials.ListMarkerHead = Matcher.join(partials.UnorderedMark, partials.OrderedMarker);\n    //\n    //   2. Matching full marker (ie including the checkbox)\n    partials.ListMarker = Matcher.sequence`${Matcher.join(\n      partials.ChecklistMarker,\n      partials.UnorderedMarker,\n      partials.OrderedMarker,\n    )}`;\n\n    patterns.DiscMarker = Matcher.sequence`^${partials.DiscMark}(?= (?!${partials.Checkbox})|$)`;\n    patterns.SquareMarker = Matcher.sequence`^${partials.SquareMark}(?= (?!${partials.Checkbox})|$)`;\n    patterns.UnorderedMarker = Matcher.sequence`^${partials.UnorderedMark}(?= (?!${partials.Checkbox})|$)`;\n    patterns.ArabicMarker = Matcher.sequence`^${partials.ArabicMarker}(?= |$)`;\n    patterns.LatinMarker = Matcher.sequence`^${partials.LatinMarker}(?= |$)`;\n    patterns.RomanMarker = Matcher.sequence`^${partials.RomanMarker}(?= |$)`;\n    patterns.OrderedMarker = Matcher.sequence`^${partials.OrderedMarker}(?= |$)`;\n    patterns.ChecklistMarker = Matcher.sequence`^${partials.ChecklistMarker}(?= |$)`;\n\n    // There are two groups of list marker expressions:\n    sequences.ListMarkerHead = Matcher.sequence`(?:${partials.ListMarkerHead})(?: )`;\n    sequences.ListMarker = Matcher.sequence`(?:${Matcher.join(\n      Matcher.sequence`(?:${partials.ChecklistMarker} )`,\n      Matcher.sequence`(?:${partials.UnorderedMark} )(?!${partials.Checkbox})`,\n      Matcher.sequence`(?:${partials.OrderedMarker} )`,\n    )})`;\n\n    sequences.NormalizableLists = Matcher.sequence/* regexp */ `\n\t\t\t(?=\\n?^(${partials.Inset}*)(?:${sequences.ListMarker}))\n\t\t\t((?:\\n?\\1\n\t\t\t\t(?:${sequences.ListMarker}|   ?)+\n\t\t\t\t[^\\n]+\n\t\t\t\t(?:\\n${partials.Inset}*)*\n\t\t\t\t(?=\\n\\1|$)\n\t\t\t)+)\n\t\t`;\n\n    sequences.NormalizableListItem = Matcher.sequence/* regexp */ `\n\t\t\t^\n\t\t\t(${partials.Inset}*)\n\t\t\t((?:${sequences.ListMarkerHead})|)\n\t\t\t([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|${sequences.ListMarker}).*)*)$\n\t\t`;\n    matchers.NormalizableLists = new RegExp(sequences.NormalizableLists, 'gmu');\n    matchers.NormalizableListItem = new RegExp(sequences.NormalizableListItem, 'gmu');\n  }\n\n  // console.log({sequences, ranges, partials});\n  // TODO: Document partials and sequences\n\n  Matchers: {\n    sequences.NormalizableBlocks = Matcher.sequence/* regexp */ `\n      (?:^|\\n)(${partials.Inset}*(?:${partials.BlockFence}))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)\n      |(?:^|\\n)(${partials.Inset}*)(?:\n\t\t\t\t<style>[^]+?(?:(?:\\n\\2</style>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script type=module>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t)\n      |([^]+?(?:(?=\\n${partials.Inset}*(?:${partials.BlockFence}|<script>|<style>|<script type=module>))|$))\n    `;\n    matchers.NormalizableBlocks = new RegExp(sequences.NormalizableBlocks, 'g');\n\n    partials.HTMLTagBody = Matcher.sequence/* regexp */ `(?:[^${`\"'`}>]+?|\".*?\"|'.*?')`;\n\n    sequences.HTMLTags = Matcher.sequence/* regexp */ `\n\t\t\t<\\/?[A-Za-z]\\w*${partials.HTMLTagBody}*?>\n\t\t\t|<\\?[^]*?\\?>\n\t\t\t|<!--[^]*?-->\n\t\t\t|<!\\w[^]>\n\t\t`;\n\n    matchers.HTMLTags = new RegExp(sequences.HTMLTags, 'g');\n\n    sequences.NormalizableParagraphs = Matcher.sequence/* regexp */ `\n      ^((?:[ \\t]*\\n(${partials.Inset}*))+)\n      ($|(?:\n\t\t\t\t(?:\n\t\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>\n\t\t\t\t\t|(?!(?:${Matcher.join(\n            sequences.HTMLTags,\n            // sequences.ListMarker,\n          )}))\n\t\t\t\t)\n\t\t\t\t[^-#>|~\\n].*\n        (?:\\n${partials.Inset}*$)+\n      )+)\n    `;\n    matchers.NormalizableParagraphs = new RegExp(sequences.NormalizableParagraphs, 'gmu');\n\n    sequences.RewritableParagraphs = Matcher.sequence/* regexp */ `\n      ^([ \\t]*[^\\-\\*#>\\n].*?)\n      (\\b.*[^:\\n\\s>]+|\\b)\n      [ \\t]*\\n[ \\t>]*?\n      (?=(\n\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>[^-#>|~\\n].*\n        |\\b(?!(?:${sequences.HTMLTags}))\n        |\\[.*?\\][^:\\n]?\n        |[^#${'`'}\\[\\n]\n      ))\n    `;\n\n    matchers.RewritableParagraphs = new RegExp(sequences.RewritableParagraphs, 'gmu');\n\n    partials.BlockQuote = Matcher.sequence/* regexp */ `(?:  ?|\\t)*>(?:  ?>|\\t>)`;\n\n    sequences.NormalizableBlockquotes = Matcher.sequence/* regexp */ `\n\t\t\t(?:((?:^|\\n)[ \\t]*\\n|^)|\\n)\n\t\t\t(${partials.BlockQuote}*)\n\t\t\t([ \\t]*(?!>).*)\n\t\t\t(?=\n\t\t\t\t(\\n\\2${partials.BlockQuote}*)\n\t\t\t\t|(\\n\\2)\n\t\t\t\t|(\\n${partials.BlockQuote}*)\n\t\t\t\t|(\\n|$)\n\t\t\t)\n\t\t`;\n\n    matchers.NormalizableBlockquotes = new RegExp(sequences.NormalizableBlockquotes, 'g');\n\n    partials.LinkText = Matcher.sequence/* regexp */ `(?:[^\\\\\\]]|\\\\.)*`;\n\n    // We may need to guard against some special cases like:\n    //\n    //  - checklists                    (?!\\[[- xX]\\] )\n    //  - eager whitespacing            (?:\\[(?=\\[\\S.*?\\S\\]\\])|!?)\n    //\n    //    NOTE: Guarding against eager whitespacing also needs\n    //    to happen in partials.LinkText: [^\\s\\n\\\\].*?[^\\s\\n\\\\]\n    //\n\n    sequences.NormalizableReferences = Matcher.sequence/* regexp */ `\n      \\[\n\t\t\t(\n\t\t\t\t${partials.LinkText}(?=\\]\\])\n\t\t\t\t|${partials.LinkText}(?=\n\t\t\t\t\t\\]\\(([^\\s\\n\\\\][^\\n${Matcher.escape('()[]')}]*?[^\\s\\n\\\\]|[^\\s\\n\\\\]|)\\)\n\t\t\t\t\t|\\]\\[([^\\s\\n\\\\][^\\n${Matcher.escape('()[]')}]*[^\\s\\n\\\\]|)\\]\n\t\t\t\t)\n\t\t\t)\\]{1,2}\n      (?:\\(\\2\\)|\\[\\3\\]|)\n\t\t`;\n    // NOTE: Safari seems to struggle with /\\S|\\s/gmu\n    matchers.NormalizableReferences = new RegExp(sequences.NormalizableReferences, 'g');\n\n    sequences.RewritableAliases = Matcher.sequence/* regexp */ `\n      ^(${partials.Inset}*)\n      \\[(\\S.*?\\S)\\]:\\s+\n      (\\S+)(?:\n        \\s+${'\"'}([^\\n]*)${'\"'}\n        |\\s+${\"'\"}([^\\n]*)${\"'\"}\n        |\n      )\\s*$\n\t\t`;\n    // NOTE: Safari seems to struggle with /\\S|\\s/gmu\n    matchers.RewritableAliases = new RegExp(sequences.RewritableAliases, 'gm');\n\n    sequences.NormalizableLink = Matcher.sequence/* regexp */ `\n      \\s*((?:\\s?[^${`'\"`}${Matcher.escape('()[]')}}\\s\\n]+))\n      (?:\\s+[${`'\"`}]([^\\n]*)[${`'\"`}]|)\n\t\t`; // (?:\\s+{([^\\n]*)}|)\n    // NOTE: Safari seems to struggle with /\\S|\\s/gmu\n    matchers.NormalizableLink = new RegExp(sequences.NormalizableLink);\n  }\n}\n\nexport const expressions = {ranges, sequences, matchers, patterns, partials};\n","ï»¿import {patterns, ranges} from './expressions.js';\n\nexport class ComposableList extends Array {\n  static create(properties, ...elements) {\n    return Object.assign(new ComposableList(...elements), properties);\n  }\n\n  toString(\n    listInset = this.listInset || '',\n    listType = this.listType || 'ul',\n    listStyle = this.listStyle,\n    listStart = this.listStart,\n  ) {\n    listStart &&\n      typeof listStart !== 'number' &&\n      (listStart = `${\n        listStyle === 'lower-latin' || listStyle === 'upper-latin'\n          ? ComposableList.parseLatin(listStart)\n          : listStyle === 'lower-roman' || listStyle === 'upper-roman'\n          ? ComposableList.parseRoman(listStart)\n          : parseInt(listStart) || ''\n      }`);\n\n    const attributes = `${\n      // TODO: Explore using type attribute instead\n      (listStyle &&\n        `style=\"list-style: ${listStyle}\"${(listStyle in ListTypes && ` type=\"${ListTypes[listStyle]}\"`) || ''}`) ||\n        ''\n    } ${\n      // TODO: Check if guard against invalid start is needed\n      (listStart && `start=\"${listStart}\"`) || ''\n    }`.trim();\n\n    const listRows = [`${listInset}<${listType}${(attributes && ` ${attributes}`) || ''}>`];\n\n    /** @type {import('./block-normalizer.js').MarkoutBlockNormalizer} */\n    const normalizer = this.normalizer;\n\n    // .split('\\n\\n').map(line => `<p>${line}</p>`).join('')\n    for (const item of this) {\n      if (item && typeof item === 'object') {\n        if (item instanceof ComposableList) {\n          const last = listRows.length - 1;\n          const row = listRows[last];\n          last > 0\n            ? (listRows[listRows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(\n                `${listInset}\\t\\t`,\n              )}\\n${listInset}\\t</li>`)\n            : listRows.push(`${listInset}\\t<li>\\n${item.toString(`${listInset}\\t\\t`)}\\n${listInset}\\t</li>`);\n          // continue;\n        } else {\n          const insetText = `${item}`;\n          let text = insetText;\n          for (const character of listInset) {\n            if (!text.startsWith(character)) break;\n            text = text.slice(1);\n          }\n          // if (normalizer) {\n          // \tconsole.log({normalizer, text});\n          // \ttext = normalizer.normalizeParagraphs(`\\n\\n${text}`);\n          // }\n          listRows.push(text);\n          // listRows.push(text.replace(/^(.+?)(?=(<\\/p>)|<[a-z]+\\b|\\n+))/, (m, a, b) => (a ? `<p>${a}${b || '</p>'}` : m)));\n        }\n      } else {\n        const [, checked, content] = /^\\s*(?:\\[([-xX]| )\\] |)([^]+?)\\s*$/.exec(item);\n\n        content &&\n          listRows.push(\n            checked\n              ? `${listInset}\\t<li type=checkbox ${\n                  checked === ' ' ? '' : checked === '-' ? 'indeterminate' : ' checked'\n                }> ${\n                  content\n                  // content.replace(/^(.+?)(?=(<\\/p>)|<[a-z]+\\b))/, (m, a, b) => (a ? `<p>${a}${b || '</p>'}` : m))\n                } </li>`\n              : `${listInset}\\t<li> ${content} </li>`,\n          );\n      }\n    }\n    listRows.push(`${listInset}</${listType}>`);\n    // console.log(this, {normalizer, listRows});\n    return `\\n${listRows.join('\\n')}\\n`;\n  }\n}\n\nconst ChecklistMarker = new RegExp(patterns.ChecklistMarker);\nconst SquareMarker = new RegExp(patterns.SquareMarker);\nconst DiscMarker = new RegExp(patterns.DiscMarker);\nconst ArabicMarker = new RegExp(patterns.ArabicMarker);\nconst ZeroLeadingArabicMarker = new RegExp(patterns.ZeroLeadingArabicMarker);\nconst LatinMarker = new RegExp(patterns.LatinMarker);\nconst LowerLatinMarker = new RegExp(patterns.LowerLatinMarker);\nconst UpperLatinMarker = new RegExp(patterns.UpperLatinMarker);\nconst RomanMarker = new RegExp(patterns.RomanMarker);\nconst LowerRomanMarker = new RegExp(patterns.LowerRomanMarker);\nconst UpperRomanMarker = new RegExp(patterns.UpperRomanMarker);\nconst OrderedMarker = new RegExp(patterns.OrderedMarker);\nconst UnorderedMarker = new RegExp(patterns.UnorderedMarker);\nconst ListTypes = {\n  'lower-latin': 'a',\n  'upper-latin': 'A',\n  'lower-roman': 'i',\n  'upper-roman': 'I',\n  decimal: '1',\n  'decimal-leading-zero': '1',\n};\n\nLATIN: {\n  const parseLatin = latin => parseLatin.mappings[latin] || NaN;\n\n  parseLatin.mappings = {};\n\n  'abcdefghijklmnopqrstuvwxyz'.split('').forEach((latin, index) => {\n    parseLatin.mappings[(parseLatin.mappings[latin] = parseLatin.mappings[latin.toUpperCase] = index + 1)] = latin;\n  });\n\n  ComposableList.parseLatin = parseLatin;\n}\n\nROMAN: {\n  const parseRoman = roman =>\n    /[^ivxlcdm]/i.test((roman = String(roman)))\n      ? NaN\n      : roman\n          .toLowerCase()\n          .split('')\n          .reduce(parseRoman.reducer, 0);\n  // prettier-ignore\n  parseRoman.mappings = Object.freeze({i: 1, v: 5, x: 10, l: 50, c: 100, d: 500, m: 1000, 1: 'i', 5: 'v', 10: 'x', 50: 'l', 100: 'c', 500: 'd', 1000: 'm'});\n\n  parseRoman.reducer = (decimal, character, index, characters) =>\n    decimal +\n    (parseRoman.mappings[character] < parseRoman.mappings[characters[index + 1]]\n      ? -parseRoman.mappings[character]\n      : parseRoman.mappings[character]);\n\n  ComposableList.parseRoman = parseRoman;\n}\n\nComposableList.ORDERED_STYLE = /^(?:(0+[1-9]\\d*)(?=\\. )|(\\d+)(?=\\. )|([ivx]+)(?=\\. )|([a-z])(?=[.)] ))|/i;\nComposableList.ORDERED_STYLE.key = ['decimal-leading-zero', 'decimal', 'roman', 'latin'];\n\nComposableList.orderedStyleOf = (marker, variant, fallback) => {\n  const category =\n    ComposableList.ORDERED_STYLE.key[\n      ComposableList.ORDERED_STYLE.exec(marker)\n        .slice(1)\n        .findIndex(Boolean)\n    ];\n  return (\n    (category !== undefined &&\n      (category === 'latin' || category === 'roman'\n        ? `${\n            variant === 'lower' || (variant !== 'upper' && marker === marker.toLowerCase()) ? 'lower' : 'upper'\n          }-${category}`\n        : category === 'decimal'\n        ? variant !== 'leading-zero'\n          ? 'decimal'\n          : 'decimal-leading-zero'\n        : variant !== 'decimal'\n        ? 'decimal-leading-zero'\n        : 'decimal')) ||\n    fallback\n  );\n};\n\nComposableList.markerIsLike = (marker, expected) =>\n  expected in ComposableList.LIKE ? ComposableList.LIKE[expected].test(marker) : undefined;\n\nComposableList.LIKE = {\n  ['square']: SquareMarker,\n  ['disc']: DiscMarker,\n  ['decimal']: ArabicMarker,\n  ['decimal-leading-zero']: ZeroLeadingArabicMarker,\n  ['latin']: LatinMarker,\n  // NOTE: We allow cases insenstivity as a common convencience feature\n  ['lower-latin']: LatinMarker,\n  ['upper-latin']: LatinMarker,\n  ['roman']: RomanMarker,\n  // NOTE: We allow cases insenstivity as a common convencience feature\n  ['lower-roman']: RomanMarker,\n  ['upper-roman']: RomanMarker,\n  ['ol']: OrderedMarker,\n  ['ul']: UnorderedMarker,\n  ['checkbox']: ChecklistMarker,\n};\n","ï»¿import {encodeEntities} from '../markup.js';\nimport {ComposableList} from './composable-list.js';\nimport {matchers} from './expressions.js';\nimport {MATCHES, countInsetQuotes} from './helpers.js';\nimport {escape} from '/markup/packages/matcher/matcher.js';\n\nconst {\n  /** Attempts to overcome **__** */\n  'markout-render-comment-stashing': COMMENT_STASHING = false,\n  'markout-render-paragraph-trimming': PARAGRAPH_TRIMMING = true,\n} = import.meta;\n\nconst generateBlockquotes = (quotesAfter, quotesBefore = 0) => {\n  let blockquotes, steps, level;\n\n  steps = quotesAfter - (quotesBefore || 0);\n\n  if (steps < 0) {\n    return '</p></blockquote>'.repeat(-steps);\n  } else if (steps > 0) {\n    blockquotes = new Array(steps);\n    for (level = quotesAfter; steps; blockquotes[steps--] = `<blockquote blockquote-level=${level--}><p>`);\n    return blockquotes.join('');\n  } else {\n    return '';\n  }\n};\n\nexport class MarkoutBlockNormalizer {\n  /**\n   * @param {string} sourceText\n   * @param {{ aliases?: { [name: string]: alias } }} [state]\n   */\n  normalizeBlocks(sourceText, state = {}) {\n    const {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\n    const source = {sourceText, [BLOCKS]: [], [ALIASES]: {}};\n    sources.push(source);\n\n    // ({body: sourceText, comments: state.comments} = decomment(sourceText));\n\n    Blocks: {\n      const body = [];\n      const {\n        sourceText,\n        [BLOCKS]: sourceBlocks,\n        [BLOCKS]: {\n          [MATCHES]: matchedBlocks = (sourceBlocks[MATCHES] = []),\n          [MATCHES]: {\n            fenced: fenced = (matchedBlocks.fenced = []),\n            embedded: embedded = (matchedBlocks.embedded = []),\n            unfenced: unfenced = (matchedBlocks.unfenced = []),\n          },\n        },\n        [ALIASES]: sourceAliases,\n        [ALIASES]: {\n          [MATCHES]: matchedAliases = (sourceAliases[MATCHES] = []),\n          [MATCHES]: {aliased = (matchedAliases.aliased = []), unaliased = (matchedAliases.unaliased = [])},\n        },\n      } = source;\n      let match = (matchers.NormalizableBlocks.lastIndex = null);\n\n      const replaceAlias = (text, indent, alias, href, title, index) => {\n        const match = {text, indent, alias, href, title, index};\n\n        // TODO: Figure out anchors: https://www.w3.org/TR/2017/REC-html52-20171214/links.html\n        return alias && alias.trim()\n          ? (aliased.push((sourceAliases[alias] = aliases[alias] = match)),\n            `<a hidden rel=\"alias\" name=\"${alias}\" href=\"${href}\" ref=\"${href}\">${title || ''}</a>`)\n          : (unaliased.push(match), text);\n      };\n\n      while ((match = matchers.NormalizableBlocks.exec(sourceText))) {\n        matchedBlocks.push(([match.text, match.fence, match.inset, match.unfenced] = match));\n        if (match.fence) {\n          fenced.push(match);\n        } else if (match.inset !== undefined) {\n          embedded.push(match);\n        } else {\n          unfenced.push(match);\n          match.text = match.text.replace(matchers.RewritableAliases, replaceAlias);\n        }\n      }\n\n      // console.log(matchedBlocks);\n    }\n\n    Normalization: {\n      /** @type {{[BLOCKS]: {[MATCHES]: MatchedBlock[]}}} */\n      const {[BLOCKS]: sourceBlocks} = source;\n      for (const matchedBlock of sourceBlocks[MATCHES]) {\n        sourceBlocks.push(\n          matchedBlock.fence !== undefined\n            ? this.normalizeFencing(\n                matchedBlock.text,\n                // Provides the fence\n                matchedBlock,\n              )\n            : matchedBlock.inset !== undefined\n            ? matchedBlock.text\n            : this.normalizeParagraphs(\n                this.normalizeBreaks(\n                  this.normalizeLists(\n                    this.normalizeBlockquotes(\n                      this.normalizeReferences(matchedBlock.text, state),\n                      // Provides the inset\n                      matchedBlock,\n                    ),\n                  ),\n                ),\n              ),\n        );\n      }\n      source.normalizedText = sourceBlocks.join('\\n');\n      import.meta['debug:markout:block-normalization'] && console.log('normalizeSourceText:', state);\n    }\n\n    // source.normalizedText = recomment(source.normalizedText, state.comments);\n\n    return source.normalizedText;\n  }\n\n  /** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n  normalizeFencing(sourceText, matchedBlock) {\n    // const debugging = true;\n    const inset = sourceText.slice(0, sourceText.indexOf('```'));\n    // debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n    if (inset.trim() === '') return sourceText;\n    const quotesBefore = countInsetQuotes(inset);\n    const Inset = new RegExp(`${escape(inset.trimRight())}(?:  ?|\\t|(?=\\n|$))`, 'g');\n    // debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n    const normalized = sourceText.replace(/```\\S*/, `$& blockquote-level=${quotesBefore}`).replace(Inset, '\\n');\n    return normalized;\n  }\n\n  /** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n  normalizeBlockquotes(sourceText, matchedBlock) {\n    const debugging = false;\n    debugging === true && (matchedBlock.blockquotes = []);\n\n    matchers.NormalizableBlockquotes.lastIndex = 0;\n    sourceText = sourceText.replace(\n      matchers.NormalizableBlockquotes,\n      (matched, leader, quote, quoted, inquote, requote, dequote, unquote, index, sourceText) => {\n        let before, after;\n        if (quote === undefined) return matched;\n\n        const quotesBefore = countInsetQuotes(quote);\n        const indent = quote.slice(0, quote.indexOf('>'));\n        const quotesAfter =\n          unquote !== undefined\n            ? 0\n            : requote !== undefined\n            ? quotesBefore\n            : inquote !== undefined\n            ? countInsetQuotes(inquote)\n            : dequote !== undefined\n            ? countInsetQuotes(dequote)\n            : quotesBefore;\n\n        before = leader !== undefined ? `${leader}${indent}${generateBlockquotes(quotesBefore, 0)}` : `\\n${indent}`;\n\n        after = generateBlockquotes(quotesAfter, quotesBefore);\n\n        const replaced = `${before}${quoted.trimLeft()}${after ? `\\n${indent}${after}` : ''}`;\n\n        debugging === true &&\n          matchedBlock.blockquotes.push({\n            replaced,\n            indent,\n            quotesBefore,\n            quotesAfter,\n            matched: [matched, leader, quote, quoted, inquote, requote, dequote, unquote],\n          });\n        return replaced;\n      },\n    );\n\n    // TODO: Normalize block quotes\n    debugging === true && matchedBlock.blockquotes.length > 0 && console.table(matchedBlock.blockquotes);\n\n    return sourceText;\n  }\n\n  /**\n   * @param {string} sourceText\n   * @param {{ aliases?: { [name: string]: alias } }} [state]\n   */\n  normalizeReferences(sourceText, state = {}) {\n    const debugging = import.meta['debug:markout:anchor-normalization'];\n    const {aliases = (state.aliases = {})} = state;\n\n    return sourceText.replace(matchers.NormalizableReferences, (m, text, link, alias, index) => {\n      const reference = alias\n        ? (alias = alias.trim())\n        : link !== undefined\n        ? (link = (link && link.trim()) || '')\n        : text\n        ? (alias = text)\n        : undefined;\n\n      // console.log('reference â %O ', {m, text, link, alias, index, reference, aliases});\n\n      if (reference !== undefined) {\n        let href, title, match;\n        // debugging && console.log(m, {text, link, alias, reference, index});\n        if (link) {\n          [, href, title] = match = matchers.NormalizableLink.exec(link);\n        } else if (alias && alias in aliases) {\n          ({href, title} = match = aliases[alias]);\n        }\n\n        debugging && console.log('debug:markout:anchor-normalization â %O ', {m, text, link, alias, match});\n\n        if (m[0] === '!') {\n          return ` <img${href ? ` src=\"${encodeURI(href)}\"` : ''}${\n            text || title ? ` title=\"${text || title}\"` : ''\n          }${(alias && ` alias=\"${alias}\"`) || ''} />`;\n        } else {\n          text = text || encodeEntities(href);\n          return ` <a${href ? ` href=\"${href}\"` : ''}${title ? ` title=\"${title}\"` : ''}${(alias &&\n            ` alias=\"${alias}\"`) ||\n            ''}>${text || reference}</a>`;\n        }\n      }\n      return m;\n    });\n  }\n\n  /** @param {string} sourceText */\n  normalizeLists(sourceText) {\n    const listProperties = {normalizer: this};\n    return sourceText.replace(matchers.NormalizableLists, (m, feed, body) => {\n      let match, indent;\n      indent = feed.slice(1);\n      let top = ComposableList.create(listProperties);\n      let list = top;\n      const lists = [top];\n      matchers.NormalizableListItem.lastIndex = 0;\n      while ((match = matchers.NormalizableListItem.exec(m))) {\n        let [text, matchedInset, matchedMarker, matchedLine] = match;\n        let like;\n        if (!matchedLine.trim()) continue;\n\n        // console.log(text, {matchedInset, matchedMarker, matchedLine});\n\n        if (matchedMarker) {\n          let depth = matchedInset.length;\n          if (depth > list.listDepth) {\n            const parent = list;\n            list.push((list = ComposableList.create(listProperties)));\n            list.parent = parent;\n          } else if (depth < list.listDepth) {\n            while ((list = list.parent) && depth < list.listDepth);\n          } else if ('listStyle' in list && !(like = ComposableList.markerIsLike(matchedMarker, list.listStyle))) {\n            const parent = list.parent;\n            ((list = ComposableList.create(listProperties)).parent = parent)\n              ? parent.push(list)\n              : lists.push((top = list));\n          } else if (depth !== list.listDepth && list.listDepth !== undefined) {\n            // debugger;\n          }\n\n          // console.log(text, [matchedMarker, list.listStyle, like]);\n\n          if (!list)\n            // debugger;\n            break;\n\n          'listInset' in list ||\n            ((list.listInset = matchedInset),\n            (list.listDepth = depth),\n            (list.listType =\n              matchedMarker[0] === '*' || matchedMarker[0] === '-'\n                ? 'ul'\n                : ((list.listStart = matchedMarker.replace(/\\W/g, '')), 'ol')));\n\n          'listStyle' in list ||\n            (list.listStyle =\n              (list.listType === 'ul' && ((matchedMarker[0] === '*' && 'disc') || 'square')) ||\n              ComposableList.orderedStyleOf(matchedMarker));\n\n          matchedLine = matchedLine.replace(/[ \\t]*\\n[> \\t]*/g, ' ');\n          list.push(matchedMarker[2] === '[' ? `${matchedMarker.slice(2)}${matchedLine}` : matchedLine);\n        } else {\n          if (list.length) {\n            const index = list.length - 1;\n            list[index] += `<p>${matchedLine}</p>`;\n          } else {\n            list.push(new String(m));\n          }\n        }\n      }\n\n      return lists.map(list => list.toString(indent)).join('\\n');\n    });\n  }\n\n  /** @param {string} sourceText */\n  normalizeParagraphs(sourceText) {\n    sourceText = sourceText.replace(matchers.NormalizableParagraphs, (m, feed, inset, body) => {\n      let paragraphs, comments;\n\n      COMMENT_STASHING && ({body, comments} = decomment(body));\n\n      paragraphs = body\n        .trim()\n        .split(/^(?:[> \\t]*\\n)+[> \\t]*/m)\n        .filter(isNotBlank);\n\n      import.meta['debug:markout:paragraph-normalization'] &&\n        console.log('normalizeParagraphs:', {m, feed, inset, body, paragraphs});\n\n      body = `${feed}<p> ${paragraphs.join(` </p>\\n${inset}<p> `)} </p>\\n`;\n\n      COMMENT_STASHING && (body = recomment(body, comments));\n\n      return body;\n    });\n\n    PARAGRAPH_TRIMMING && (sourceText = sourceText.replace(/<p>[\\s\\n]*<\\/p>/g, ''));\n\n    return sourceText;\n  }\n\n  normalizeBreaks(sourceText) {\n    return sourceText.replace(matchers.RewritableParagraphs, (m, a, b, c, index, sourceText) => {\n      import.meta['debug:markout:break-normalization'] &&\n        console.log('normalizeBreaks:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n      return `${a}${b} `;\n    });\n  }\n}\n\n// export const MATCHES = Symbol('matches');\nexport const ALIASES = 'aliases';\nexport const BLOCKS = 'blocks';\n\nconst decomment = body => {\n  const comments = [];\n  body = body.replace(/<!--[^]+-->/g, comment => `<!--${comments.push(comment)}!-->`);\n  return {body, comments};\n};\n\nconst recomment = (body, comments) => {\n  return body.replace(\n    new RegExp(`<!--(${comments.map((comment, i) => comments.length - i).join('|')})!-->`, 'g'),\n    (comment, index) => comments[index] || '<!---->',\n  );\n};\n\nconst isNotBlank = text => typeof text === 'string' && !(text === '' || text.trim() === '');\n\n/** @template {string} T @typedef {Partial<Record<T, string>>} MatchedRecord */\n/** @typedef {MatchedRecord<'text'|'fence'|'inset'|'unfenced'>} MatchedBlockRecord */\n/** @typedef {RegExpExecArray & MatchedBlockRecord} MatchedBlock */\n","ï»¿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\nexport {DELIMITER, UNKNOWN} from './matcher.js';\n\n/** Segmenter for sub-match captures */\nexport class SegmentMatcher extends Matcher {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags, entities, state);\n    this.captureEntity = this.captureEntity;\n  }\n  /**\n   * @template {MatcherMatch} T\n   * @param {string} text\n   * @param {number} capture\n   * @param {T} match\n   * @returns {T}\n   */\n  captureEntity(text, capture, match) {\n    if (capture === 0) return void (match.capture = {});\n    if (text === undefined) return;\n    const index = capture - 1;\n    const {\n      entities: {[index]: entity, meta, identities},\n      state,\n    } = this;\n    // entity === INSET ||\n    // entity === LOOKAHEAD ||\n    // entity === Matcher.DELIMITER ||\n    // entity === Matcher.UNKNOWN ||\n    // debugger;\n    if (!entity) return;\n\n    if (typeof entity === 'function') {\n      match.entity = index;\n      entity(text, capture, match, state);\n      return;\n    }\n\n    if (meta.has(entity)) {\n      // match.entity || (match.entity = index);\n      match.meta = `${(match.meta && `${match.meta} `) || ''}${/** @type {string} */ (entity)}`;\n    } else if (identities.has(entity) && match.identity == null) {\n      match.entity = index;\n      match.identity = entity;\n    }\n    match.capture[/** @type {MatcherNamedEntity} */ (entity)] = text;\n  }\n\n  /** @param {MatcherExecArray} match */\n  capture(match) {\n    if (match === null) return null;\n\n    match.matcher = this;\n    match.capture = {};\n\n    match &&\n      (match.forEach(this.captureEntity || SegmentMatcher.prototype.captureEntity, this),\n      match.identity ||\n        (match.capture[\n          (/** @type {MatcherMatch} */(match)).identity = this.UNKNOWN || Matcher.UNKNOWN // prettier-ignore\n        ] = match[0]));\n\n    return match;\n  }\n\n  async debug(options) {\n    const job = {options, ...options};\n    try {\n      job.timestamp = `?${encodeURIComponent(Date.now())}`;\n      job.location =\n        (typeof globalThis === 'object' &&\n          globalThis &&\n          globalThis.location != null &&\n          typeof globalThis.location === 'object' &&\n          globalThis.location &&\n          globalThis.location.href) ||\n        /\\/(?:node_modules\\/(?:@.+?\\/|)|)(?:Markdown\\/|)lib\\/.*$/[Symbol.replace](import.meta.url, '/');\n      if (job.specifier != null) {\n        job.sourceText = null;\n        job.url = new URL(job.specifier, job.location);\n        job.response = await (job.request = fetch(job.url));\n        if (!job.response.ok) throw Error(`Failed to fetch ${job.url}`);\n        job.sourceText = await job.response.text();\n      }\n      job.sourceText === null ||\n        /** @type {import('./debug.js')} */ (await import('./debug.js')).debugMatcher(\n          this, // SegmentMatcher.prototype,\n          job.sourceText,\n          (job.debugging = {}),\n        );\n    } catch (exception) {\n      throw (job.error = (exception.stack, exception));\n    } finally {\n      console.group('%o', job);\n      if (job.error) console.warn(job.error);\n      console.groupEnd();\n    }\n  }\n}\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  INSET = (SegmentMatcher.INSET = SegmentMatcher.prototype.INSET = /** @type {MatcherIdentityString} */ ('INSET?')),\n  /** Identity for unknown captures */\n  LOOKAHEAD = (SegmentMatcher.LOOKAHEAD = SegmentMatcher.prototype.LOOKAHEAD =\n    /** @type {MatcherIdentityString} */ ('LOOKAHEAD?')),\n} = SegmentMatcher;\n\n// await (SegmentMatcher.prototype.debug['implementation'] ||\n//   (SegmentMatcher.prototype.debug['implementation'] = import(\n//     // TODO: Find a better way to resolve matcher/lib/debug.js\n//     '/markup/packages/matcher/lib/debug.js'\n//   ).catch(exception => {\n//     console.warn(exception);\n//     return new Proxy(Object.seal(Object.freeze(() => {})), {\n//       get() {\n//         return arguments[0];\n//       },\n//       apply: Reflect.apply.bind(console.warn, null, [exception], undefined),\n//     });\n//   })))\n","ï»¿// @ts-check\n\nimport {SegmentMatcher, INSET, LOOKAHEAD, UNKNOWN} from '/markup/packages/matcher/lib/segment-matcher.js';\n\nexport const MarkdownSegmenter = (() => {\n  // SEE: https://github.github.com/gfm/#tables-extension-\n  const MarkdownLists = SegmentMatcher.sequence/* regexp */ `\n\t\t[-*]\n\t\t|[1-9]+\\d*\\.\n\t\t|[ivx]+\\.\n\t\t|[a-z]\\.\n\t`;\n  const MarkdownMatter = SegmentMatcher.sequence/* regexp */ `\n\t\t---(?=\\n.+)(?:\\n.*)+?\\n---\n\t`;\n  const MarkdownStub = SegmentMatcher.sequence/* regexp */ `\n\t\t<!--[^]*?-->\n\t\t|<!.*?>|<\\?.*?\\?>\n\t\t|<%.*?%>\n\t\t|<(?:\\b|\\/).*(?:\\b|\\/)>.*\n\t`;\n  const MarkdownStart = SegmentMatcher.sequence/* regexp */ `\n\t\t(?:\n\t\t\t[^#${'`'}~<>|\\n\\s]\n\t\t\t|${'`'}{1,2}(?!${'`'})\n\t\t\t|~{1, 2}(?!~)\n\t\t)\n\t`;\n  // (?!(?:${MarkdownLists}) )\n\n  const MarkdownLine = SegmentMatcher.sequence/* regexp */ `\n\t\t(?!(?:${MarkdownLists}) )\n\t\t(?:${MarkdownStart})\n\t\t(?:${MarkdownStub}|.*)*$\n\t`;\n  const MarkdownDivider = SegmentMatcher.sequence/* regexp */ `\n\t\t-{2,}\n\t\t|={2,}\n\t\t|\\*{2,}\n\t\t|(?:- ){2,}-\n\t\t|(?:= ){2,}=\n\t\t|(?:\\* ){2,}\\*\n\t`;\n  const MarkdownATXStyleHeading = SegmentMatcher.sequence/* regexp */ `\n\t\t#{1,6}(?= +\\S)\n\t`;\n  const MarkdownSetextHeading = SegmentMatcher.sequence/* regexp */ `\n\t\t${MarkdownStart}.*\\n(?=\n\t\t\t\\2\\={3,}\\n\n\t\t\t|\\2\\-{3,}\\n\n\t\t)\n\t`;\n\n  return /** @type {SegmentMatcher} */ (SegmentMatcher.define(\n    entity => SegmentMatcher.sequence/* regexp */ `^\n\t\t  (?:\n\t\t    ${entity(UNKNOWN)}(${MarkdownMatter}$|[ \\t]*(?:${MarkdownStub})[ \\t]*$)|\n\t\t    (?:\n\t\t      ${entity(INSET)}((?:  |\\t)*?(?:> ?)*?(?:> ?| *))\n\t\t      (?:\n\t\t        ${entity('fence')}(?:(${'```'}|~~~)(?=.*\\n)[^]*?\\n\\2\\3.*$)|\n\t\t        ${entity('heading')}(?:(${MarkdownATXStyleHeading}|${MarkdownSetextHeading}).*$)|\n\t\t        ${entity('list')}(?:(${MarkdownLists}) +${MarkdownLine}(?:\\n\\2 {2,4}${MarkdownLine})*$)|\n\t\t        ${entity('alias')}(?:(\\[.+?\\]: .+)$)|\n\t\t        ${entity('divider')}(?:(${MarkdownDivider})$)|\n\t\t        ${entity('feed')}(?:([ \\t]*(?:\\n\\2[ \\t])*)$)|\n\t\t\t\t\t\t${entity('table')}(\n\t\t\t\t\t\t\t[|](?=[ :-]).+[|]$(?:\\n\\2[|].+[|]$)+|\n\t\t\t\t\t\t\t[^|\\n]*?\\|[^|\\n].*$(?:\\n\\2[^|\\n]*?\\|[^|\\n].*$)+\n\t\t\t\t\t\t)|\n\t\t        ${entity('paragraph')}(?:(${MarkdownLine}(?:\\n\\2 {0,2}${MarkdownLine})*)$)\n\t\t      )|\n\t\t      ${entity(UNKNOWN)}(.+?$)\n\t\t    )\n\t\t  )(?=${entity(LOOKAHEAD)}(\\n?^.*$)?)\n\t\t`,\n    'gmi',\n  ));\n})();\n\ntypeof globalThis !== 'object' ||\n  !globalThis ||\n  (globalThis.$md = (specifier = '/markout/examples/markdown-testsuite.md') =>\n    MarkdownSegmenter.debug({specifier, matcher: MarkdownSegmenter}));\n","ï»¿// @ts-check\n\n/** @template T @param {T} pairs @returns {Readonly<T>} */\nexport const Enum = pairs => Object.freeze(Object.setPrototypeOf(Enum.reflect({...pairs}), null));\n\n/** @template T @param {T} pairs @returns {T & {[K in PropertyKey & T[keyof T]]?: PropertyKey}} */\nEnum.reflect = pairs => {\n\t/** @type {{[K in PropertyKey & T[keyof T]]?: {value: K}}} */\n\tconst descriptors = {};\n\tfor (const [key, value] of Object.entries(pairs))\n\t\tif (typeof value === 'string' || typeof value === 'number' || typeof value === 'symbol')\n\t\t\tdescriptors[value] = {value: key, enumerable: false};\n\tObject.defineProperties(pairs, descriptors);\n\n\treturn pairs;\n};\n\n/** @param {string} context @param {object} meta @param {(string | boolean)[]} [flags] */\nexport const debugging = (context, meta, flags) =>\n\t!(meta && context && flags) ||\n\ttypeof meta.url !== 'string' ||\n\ttypeof context !== 'string' ||\n\ttypeof flags !== 'object' ||\n\t(Array.isArray(flags) && flags.includes(false)) ||\n\tObject.entries(flags).reduce(\n\t\tArray.isArray(flags)\n\t\t\t? (meta, [, flag]) => (typeof flag === 'string' && (meta[`debug:${context}:${flag}`] = true), meta)\n\t\t\t: (meta, [flag, value = meta[flag]]) => (\n\t\t\t\t\ttypeof flag === 'string' && (meta[`debug:${context}:${flag}`] = value), meta\n\t\t\t  ),\n\t\tmeta,\n\t);\n\n/** @type {(text: string, matcher: RegExp | string) => IterableIterator<RegExpExecArray>} */\nexport const matchAll = Function.call.bind(\n\tString.prototype.matchAll ||\n\t\t{\n\t\t\t/**\n\t\t\t * @this {string}\n\t\t\t * @param {RegExp | string} pattern\n\t\t\t */\n\t\t\t*matchAll() {\n\t\t\t\tconst matcher = arguments[0] && (arguments[0] instanceof RegExp ? arguments[0] : RegExp(arguments[0], 'g'));\n\t\t\t\tconst string = String(this);\n\t\t\t\tfor (\n\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\tlastIndex <\n\t\t\t\t\t// (((arguments[0].lastIndex = lastIndex > -1 ? lastIndex : null), (match = next()))\n\t\t\t\t\t(((matcher.lastIndex = lastIndex > -1 ? lastIndex + 1 : null), (match = matcher.exec(string)))\n\t\t\t\t\t\t? (lastIndex = matcher.lastIndex)\n\t\t\t\t\t\t: lastIndex);\n\t\t\t\t\tyield match\n\t\t\t\t);\n\t\t\t},\n\t\t}.matchAll,\n);\n\n/** @param {string} string */\nexport const normalizeString = string => Object.keys({[string]: true})[0];\n","ï»¿import {MarkoutBlockNormalizer} from './block-normalizer.js';\nimport {MarkdownSegmenter} from '../markdown/markdown-segmenter.js';\nimport {MATCHES, MATCH} from './helpers.js';\n\nconst {\n  // Attempts to overcome **__**\n  // 'markout-render-merged-marking': MERGED_MARKING = true,\n  // 'markout-segmentation': MARKOUT_SEGMENTATION = true,\n} =\n  // @ts-ignore\n  import.meta;\n\nexport class MarkoutSegmentNormalizer extends MarkoutBlockNormalizer {\n  /**\n   * @param {string} sourceText\n   * @param {{ sources?: *, aliases?: { [name: string]: * }, segments?: DocumentFragment }} [state]\n   */\n  normalizeSegments(sourceText, state = {}) {\n    const debugging = import.meta['debug:markout:segment-normalization'];\n    try {\n      state.sources || (state.sources = []);\n      state.aliases || (state.aliases = {});\n      state[SEGMENTS] || (state[SEGMENTS] = []);\n\n      // TODO: Implement Markout's Matcher-based segment normalization\n      // setTimeout(() => this.debugSegments(sourceText), 5000);\n      if (debugging) {\n        this.normalizeMarkdownSegments(sourceText, state);\n        setTimeout(() => console.log(state));\n      }\n\n      return this.normalizeBlocks(sourceText, state);\n    } finally {\n      // @ts-ignore\n      import.meta['debug:markout:segment-normalization'] && console.log('normalizeSegments:', state);\n    }\n  }\n\n  normalizeMarkdownSegments(sourceText, state) {\n    const {\n      [SEGMENTS]: segments = (state[SEGMENTS] = []),\n      [SEGMENTS]: {[MATCHES]: matches = (state[SEGMENTS][MATCHES] = [])},\n    } = state;\n    for (const match of MarkdownSegmenter.matchAll(sourceText)) {\n      const {\n        0: text,\n        identity,\n        capture: {[MarkdownSegmenter.INSET]: inset},\n      } = match;\n      const segment = {identity, text, inset, [MATCH]: match};\n      if (identity === 'table') {\n        this.normalizeMarkdownTableSegment(segment);\n        if (segment.identity === 'table') {\n          (state[TABLES] || (state[TABLES] = [])).push(segment);\n        }\n      }\n      segments.push(segment);\n      matches.push(match);\n    }\n  }\n\n  normalizeMarkdownTableSegment(segment) {\n    const {text, inset} = segment;\n    segment.lines = `\\n${text}`.split(`\\n${inset}`).slice(1);\n    segment.rows = [];\n    for (const text of segment.lines) {\n      const cells = text.replace(/^\\s*(?:\\|\\s*)?|(?:\\|\\s*)?\\s*$/g, '').split(/\\s*\\|\\s*/);\n      cells.text = text;\n      cells.inset = inset;\n      if (segment.rows.length === 1 && !/[^-|: \\t]/.test(text)) {\n        segment.rows.header = segment.rows[0];\n        segment.rows.format = cells;\n      } else {\n        cells.row = segment.rows.push(cells);\n      }\n    }\n  }\n\n  async debugSegments(sourceText, options) {\n    MarkdownSegmenter.debug({...options, sourceText});\n    // (await import('/markout/lib/markdown/markdown-segmenter.js')).MarkdownSegmenter.debug({sourceText});\n  }\n}\n\nexport const SEGMENTS = 'segments';\nexport const TABLES = 'tables';\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n  // import.meta.url.includes('/markout/lib/') ||\n  typeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n  'segment-normalization',\n  'block-normalization',\n  'paragraph-normalization',\n  'anchor-normalization',\n  'break-normalization',\n]);\n","ï»¿import {MarkoutSegmentNormalizer} from './experimental/segment-normalizer.js';\nimport {normalizeString} from '/markout/lib/helpers.js';\n\nconst {\n  // 'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nexport class MarkoutNormalizer extends MarkoutSegmentNormalizer {\n  normalizeSourceText(sourceText) {\n    const {normalized = (this.normalized = new Map())} = this;\n    let normalizedText = normalized.get(sourceText);\n    normalizedText !== undefined ||\n      normalized.set(\n        sourceText,\n        (normalizedText = normalizeString(this.normalizeSegments(normalizeString(sourceText)))),\n      );\n    return normalizedText;\n  }\n}\n","ï»¿export const DOM_MUTATIONS = undefined;\nexport const BREAK_NORMALIZATION = undefined;\nexport const HEADING_NORMALIZATION = true;\nexport const PARAGRAPH_NORMALIZATION = true;\nexport const BLOCK_PARAGRAPH_NORMALIZATION = true;\nexport const LIST_PARAGRAPH_NORMALIZATION = true;\nexport const CHECKLIST_NORMALIZATION = true;\nexport const BLOCKQUOTE_NORMALIZATION = true;\nexport const BLOCKQUOTE_HEADING_NORMALIZATION = true;\nexport const TOKEN_FLATTENING = true;\nexport const DECLARATIVE_STYLING = true;\nexport const SOURCE_TEXT_RENDERING = true;\nexport const ASSET_REMAPPING = true;\nexport const ASSET_INITIALIZATION = true;\n","ï»¿// @ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as defaults from './defaults.js';\n\n// @ts-ignore\nexport const content = /** @type {import('./content').content} */ ({});\n\nObject.setPrototypeOf(content, null);\n\ncontent.matchers = {};\ncontent.symbols = {};\ncontent.selectors = {};\ncontent.defaults = defaults;\n","ï»¿// @ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Enum} from '../helpers.js';\nimport {content} from './content.js';\nimport * as markup from '../markup.js';\n\nexport const MarkupAttributeMap = Enum({\n  SourceType: 'source-type',\n  MarkupMode: 'markup-mode',\n  MarkupSyntax: 'markup-syntax',\n});\n\n/**\n * @param {Partial<{element: HTMLElement, sourceType: string, sourceText: String}>} options\n * @returns {Promise<HTMLElement>}\n */\nexport const renderSourceText = async options => {\n  let element, sourceType, sourceText, state;\n\n  if (\n    !options ||\n    typeof options !== 'object' ||\n    (({element, sourceType, sourceText, ...options} = options),\n    !(element\n      ? !element.hasAttribute(content.MarkupAttributeMap.MarkupSyntax) &&\n        (sourceType ||\n          (sourceType =\n            element.getAttribute(content.MarkupAttributeMap.MarkupMode) ||\n            element.getAttribute(content.MarkupAttributeMap.SourceType)),\n        sourceText || (sourceText = element.textContent || ''))\n      : sourceText))\n  )\n    return void console.warn('Aborted: renderSourceText(%o => %o)', options, {element, sourceType, sourceText});\n\n  element != null\n    ? element.removeAttribute(content.MarkupAttributeMap.SourceType)\n    : ((element = document.createElement('pre')).className = 'markup code');\n\n  state = element['(markup)'] = {\n    element,\n    sourceText,\n    sourceType,\n    fragment: document.createDocumentFragment(),\n    parsingGoal:\n      (/^(js|javascript|es|ecmascript)$/i.test(sourceType) &&\n        (element.matches('[script=module], [module]') ? 'module' : element.matches('[script]') ? 'script' : 'code')) ||\n      undefined,\n  };\n\n  // TODO: Implement proper out-of-band handling for js versus es modes\n  state.parsingGoal === 'module' && (state.sourceType = sourceType = 'es');\n\n  element.setAttribute(content.MarkupAttributeMap.MarkupSyntax, state.sourceType);\n  element.textContent = '';\n  element.sourceText = sourceText;\n\n  // @ts-ignore\n  await markup.render(sourceText, state);\n  element.appendChild(state.fragment);\n\n  return element;\n};\n\ncontent.MarkupAttributeMap = MarkupAttributeMap;\ncontent.renderSourceText = renderSourceText;\n","ï»¿// import {tokenize as tokenizeMarkup, encodeEntities, encodeEntity} from './markup.js';\nimport * as markup from './markup.js';\n\nimport {MarkoutNormalizer} from './normalizer.js';\nimport {content} from './content.js';\n\n/** @type {any} */\nconst {\n  // Attempts to overcome **__**\n  'markout-render-span-restacking': SPAN_RESTACKING = true,\n  'markout-render-newline-consolidation': NEWLINE_CONSOLIDATION = false,\n  // Patched regression from changing markdown.FRAGMENTS\n  //   to /[^\\\\\\n\\s\\[\\]\\(\\)\\<\\>&`\"*~_]+?/ which has been reversed\n  'markout-render-patch-stray-brace': STRAY_BRACE = false,\n  'markout-render-url-expansion': URL_EXPANSION = true,\n} = import.meta;\n\nexport const normalize = sourceText => {\n  const {normalizer = (normalize.normalizer = new MarkoutNormalizer())} = normalize;\n  return normalizer.normalizeSourceText(sourceText);\n};\n\nexport const render = tokens => {\n  const {\n    lookups = (render.lookups = createLookups()),\n    renderer = (render.renderer = new MarkoutRenderer({lookups})),\n  } = render;\n  return renderer.renderTokens(tokens);\n};\n\nexport const tokenize = sourceText => markup.tokenize(`${sourceText.trim()}\\n}`, {sourceType: 'markdown'});\n\nexport const encodeEscapedEntities = ((Escapes, replace) => text => text.replace(Escapes, replace))(\n  /\\\\([*^~`_])(\\1|)/g,\n  (m, e, e2) => (e2 ? markup.encodeEntity(e).repeat(2) : markup.encodeEntity(e)),\n);\n\nconst FencedBlockHeader = /^(?:(\\w+)(?:\\s+(.*?)\\s*|)$|)/m;\n\nconst {URLScheme, URLPrefix, URLString} = {\n  URLScheme: /^https?:|HTTPS?:|[a-z]{2,}[-+.0-9a-z]*\\b:|[A-Z]{2,}[-+.0-9A-Z]*\\b:/,\n  URLPrefix: /^(?:https?:|HTTPS?:|[a-z]{2,}[-+.0-9a-z]*\\b:|[A-Z]{2,}[-+.0-9A-Z]*\\b:)\\/\\/\\S+$|^(?:[A-Za-z][!%\\-0-9A-Z_a-z~]+\\.)+(?:[a-z]{2,5}|[A-Z]{2,5})(?:\\/\\S*|)$/u,\n  URLString: /^\\s*(?:(?:https?:|HTTPS?:|[a-z]{2,}[-+.0-9a-z]*\\b:|[A-Z]{2,}[-+.0-9A-Z]*\\b:)\\/\\/\\S+|(?:[A-Za-z][!%\\-0-9A-Z_a-z~]+\\.)+(?:[a-z]{2,5}|[A-Z]{2,5})\\/\\S*?)(?:[?][^\\s(){}\\[\\]]*?|)(?:[#][^\\s(){}\\[\\]]*?|)\\s*$/u,\n};\n\nconst SPAN = 'span';\n\nexport class MarkoutRenderingContext {\n  constructor(renderer) {\n    ({lookups: this.lookups} = this.renderer = renderer);\n\n    [\n      this.passthru,\n      this.block,\n      this.fenced,\n      this.header,\n      this.indent,\n      this.newlines,\n      this.comment,\n    ] = this.renderedText = '';\n\n    SPAN_RESTACKING && createSpanStack(this);\n  }\n}\n\nexport class MarkoutRenderer {\n  constructor({lookups = createLookups()} = {}) {\n    this.lookups = lookups;\n  }\n\n  renderBlockTokens(token, context) {\n    let before, tag, body, previous, inset;\n    previous = token;\n    inset = '';\n    const {classes, block} = context;\n    while ((previous = previous.previous)) {\n      if (previous.lineBreaks) break;\n      inset = `${previous.text}${inset}`;\n    }\n    if (!/[^> \\t]/.test(inset)) {\n      before = `<${block}${this.renderClasses(classes)}>`;\n      tag = 'tt';\n      classes.push('opener', `${token.type}-token`);\n    } else {\n      body = token.text;\n    }\n    return {before, tag, body};\n  }\n\n  // renderCommentToken(token, context) {}\n\n  encodeURL(url) {\n    return `${url}`.replace(/[\\\\\"]/g, encodeURIComponent);\n  }\n\n  renderTokens(tokens, context = new MarkoutRenderingContext(this)) {\n    let text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta;\n    context.tokens = tokens;\n\n    const {lookups} = context;\n    const {renderClasses} = this;\n\n    // context.openTags = 0;\n    context.openTags = [];\n    context.closeTags = [];\n\n    for (const token of context.tokens) {\n      if (!token || !(body = token.text)) continue;\n      ({text, type = 'text', punctuator, lineBreaks, hint = 'text', previous} = token);\n\n      // Sub type 'text' to 'whitespace'\n      // TODO: Sub type 'text' to 'break' (ie !!lineBreaks)\n      type !== 'text' || lineBreaks || text.trim() || (type = 'whitespace');\n\n      tag = classes = before = after = meta = undefined;\n\n      if (context.passthru || context.fenced) {\n        if (context.fenced) {\n          if (context.fenced === context.passthru) {\n            context.header += text;\n            lineBreaks && ((context.header = context.header.trimRight()), (context.passthru = ''));\n          } else if (punctuator === 'closer' && text === '```') {\n            let sourceType, sourceAttributes;\n            if (context.header) {\n              [, sourceType = 'markup', sourceAttributes] = FencedBlockHeader.exec(context.header);\n              import.meta['debug:fenced-block-header-rendering'] &&\n                console.log('fenced-block-header', {\n                  fenced: context.fenced,\n                  header: context.header,\n                  passthru: context.passthru,\n                  sourceType,\n                  sourceAttributes,\n                  context,\n                });\n              sourceAttributes = `${sourceAttributes ? `${sourceAttributes} ` : ''}data-markout-fence=\"${\n                context.fenced\n              }\" data-markout-header=\"${markup.encodeEntities(context.header)}\" tab-index=-1`;\n            } else {\n              sourceAttributes = `data-markout-fence=\"${context.fenced}\"`;\n            }\n            // passthru rendered code\n            context.renderedText += `<${context.block} class=\"markup code\" ${\n              content.MarkupAttributeMap.SourceType\n            }=\"${sourceType || 'markup'}\"${(sourceAttributes && ` ${sourceAttributes}`) || ''}>${markup.encodeEntities(\n              context.passthru,\n            )}</${context.block}>`;\n            context.header = context.indent = context.fenced = context.passthru = '';\n          } else {\n            // passthru code\n            context.passthru += body.replace(context.indent, '');\n          }\n          continue;\n        } else if (context.url) {\n          if (type === 'text' || /^[~=?#&:]/.test(text)) {\n            context.passthru += text;\n            continue;\n          }\n          if (URLString.test(context.passthru)) {\n            [before, context.url, after] = context.passthru.split(/(\\S+?(?=(\\.?\\s*$|$)))/);\n            // context.url && console.log(context.url, {text, token, before, context, after});\n            context.renderedText += `${before}<span href=\"${this.encodeURL(\n              URLScheme.test(context.url) ? context.url : `https://${context.url}`,\n            )}\"><samp class=url>${context.url}</samp></span>${after}`;\n            before = after = undefined;\n          } else {\n            context.renderedText += context.passthru;\n          }\n          context.url = context.passthru = '';\n        } else {\n          // Construct open and close tags\n          if (context.currentTag) {\n            // if (\n            // \tpunctuator === 'closer' &&\n            // \t(body === '>' || body === '/>') &&\n            // \tcontext.currentTag !== undefined &&\n            // \tcontext.currentTag.opener !== undefined\n            // ) {\n            // \tdebugTagOpenerPassthru(token, context, {\n            // \t\tscope: {text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta},\n            // \t});\n            // }\n\n            // Construct body\n            context.passthru += body;\n\n            if (context.currentTag.nodeName === '') {\n              if (type === 'text' || text === '-' || text === ':') {\n                context.currentTag.construct += text;\n              } else if (context.currentTag.construct === '') {\n                context.currentTag.nodeName = ' ';\n                context.currentTag.construct = text;\n              } else {\n                context.currentTag.nodeName = context.currentTag.construct;\n                // Substitute element name from lookup\n                context.currentTag.nodeName in lookups.elements &&\n                  (context.passthru = context.passthru.replace(\n                    context.currentTag.nodeName,\n                    (context.currentTag.nodeName = lookups.elements[context.currentTag.nodeName]),\n                  ));\n              }\n            } else {\n              context.currentTag.construct = text;\n              // console.log(text, {...context});\n            }\n          } else {\n            // console.log(text, {...context});\n            // Construct body\n            context.passthru += body;\n          }\n          if (punctuator === 'closer' || (context.comment && punctuator === 'comment')) {\n            // passthru body rendered\n            context.renderedText += context.passthru;\n            context.passthru = '';\n          }\n          continue;\n        }\n      }\n\n      tag = SPAN;\n      classes = context.classes = hint.split(/\\s+/);\n      before, after;\n\n      if (hint.includes('-in-markdown')) {\n        context.renderedText += token.text;\n        continue;\n      } else if (hint === 'markdown' || hint.startsWith('markdown ') || hint.includes('in-markdown')) {\n        type !== 'text' || lineBreaks || (text in lookups.entities && (body = lookups.entities[text]));\n\n        if (punctuator) {\n          context.passthru =\n            (((context.comment = punctuator === 'comment' && text) || lookups.tags.has(text)) && text) || '';\n          // Opener\n          if (punctuator === 'opener') {\n            if (text === '<') {\n              context.openTags.push(\n                (context.currentTag = {opener: token, delimiter: text, construct: '', nodeName: ''}),\n              );\n            } else if (text === '</') {\n              context.closeTags.push(\n                (context.currentTag = {closer: token, delimiter: text, construct: '', nodeName: ''}),\n              );\n            }\n          } else if (punctuator === 'closer') {\n            context.currentTag = undefined;\n          }\n          if (context.passthru) continue;\n\n          if (punctuator === 'opener') {\n            if ((context.fenced = text === '```' && text)) {\n              context.block = 'pre';\n              context.passthru = context.fenced;\n              [context.indent = ''] = /^[ \\t]*/gm.exec(previous.text);\n              context.indent && (context.indent = new RegExp(String.raw`^${context.indent}`, 'mg'));\n              context.header = '';\n              continue;\n            } else if (text in lookups.spans) {\n              if (SPAN_RESTACKING && (before = context.stack.open(text, body, classes)) === undefined) continue;\n              before || ((before = `<${lookups.spans[text]}${renderClasses(classes)}>`), classes.push('opener'));\n            } else if (text === '<!' || text === '<?') {\n              let next;\n              const closer = text === '<!' ? /-->$/ : /\\?>$/;\n              while (\n                (next = context.tokens.next().value) &&\n                (body += next.text) &&\n                next.punctuator !== 'closer' &&\n                !closer.test(next.text)\n                // (next.punctuator === 'opener' && /^</.test(next.text)) ||\n              );\n              context.passthru = body;\n              continue;\n            }\n          } else if (punctuator === 'closer') {\n            if (text === '```') {\n              context.block = lookups.blocks['```'] || 'pre';\n            } else if (text in lookups.spans) {\n              if (SPAN_RESTACKING && (after = context.stack.close(text, body, classes)) === undefined) continue;\n              after || ((after = `</${lookups.spans[text]}>`), classes.push('closer'));\n            }\n          } else if (SPAN_RESTACKING && text in lookups.spans) {\n            if (\n              (context.stack[text] >= 0\n                ? (after = context.stack.close(text, body, classes))\n                : (before = context.stack.open(text, body, classes))) === undefined\n            )\n              continue;\n          } else if (!context.block && (context.block = lookups.blocks[text])) {\n            ({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n          }\n          (before || after) && (tag = 'tt');\n          classes.push(`${punctuator}-token`);\n        } else {\n          if (\n            URL_EXPANSION &&\n            type === 'text' &&\n            tag === SPAN &&\n            before === after &&\n            before === undefined &&\n            URLPrefix.test(text)\n          ) {\n            context.passthru = context.url = text;\n            continue;\n            // before = `<a href=\"${text.trim()}\">`;\n            // after = `</a>`;\n            // console.log(text, {tag, before, after}, token);\n          }\n          if (lineBreaks) {\n            (!context.block && (tag = 'br')) || ((after = `</${context.block}>`) && (context.block = body = ''));\n          } else if (type === 'sequence') {\n            if (text[0] === '`') {\n              tag = 'code';\n              body = text.replace(/(``?)(.*)\\1/, '$2');\n              let fence = '`'.repeat((text.length - body.length) / 2);\n              body = markup.encodeEntities(body.replace(/&nbsp;/g, '\\u202F'));\n              fence in lookups.entities && (fence = lookups.entities[fence]);\n              classes.push('fenced-code');\n              classes.push('code');\n            } else if (text.startsWith('---') && !/[^\\-]/.test(text)) {\n              tag = 'hr';\n            } else if (!context.block && (context.block = lookups.blocks[text])) {\n              ({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n            } else {\n              // sequence\n              body = text;\n            }\n          } else if (type === 'whitespace') {\n            // if (span === 'code') body.replace(/\\xA0/g, '&nbsp;');\n            tag = '';\n          } else {\n            // debug(`${type}:token`)(type, token);\n            classes.push(`${type}-token`);\n            body = text;\n          }\n        }\n      }\n\n      meta =\n        tag &&\n        [\n          punctuator && `punctuator=\"${escape(punctuator)}\"`,\n          type && `token-type=\"${escape(type)}\"`,\n          hint && `token-hint=\"${escape(hint)}\"`,\n          lineBreaks && `line-breaks=\"${escape(lineBreaks)}\"`,\n        ].join(' ');\n\n      tag === 'span' && (body = encodeEscapedEntities(body));\n\n      before && (context.renderedText += before);\n      tag === 'br' || (context.newlines = 0)\n        ? (!NEWLINE_CONSOLIDATION && (context.renderedText += '\\n')) ||\n          (context.newlines++ && (context.renderedText += '\\n')) ||\n          (context.renderedText += '<br/>')\n        : tag === 'hr'\n        ? (context.renderedText += '<hr/>')\n        : body &&\n          (tag\n            ? (context.renderedText += `<${tag} ${meta}${renderClasses(classes)}>${body}</${tag}>`)\n            : (context.renderedText += body));\n      after && (context.renderedText += after);\n    }\n\n    if (STRAY_BRACE && context.renderedText.endsWith(`>}</span>`)) {\n      context.renderedText = context.renderedText.slice(0, context.renderedText.lastIndexOf('<span'));\n    }\n\n    return context.renderedText;\n  }\n\n  renderClasses(classes) {\n    return ((classes = [...classes].filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n  }\n}\n\nconst debugTagOpenerPassthru = (token, context, details) => {\n  console.log(\n    '\"%c%s%c%s%c%s%c\" â %o',\n    'color: LightSlateGrey;',\n    context.renderedText.length > 20 ? `â¦${context.renderedText.slice(-20)}` : context.renderedText,\n    'color: DarkSlateBlue;',\n    context.passthru,\n    'color: DarkSlateBlue; font-weight: 400;',\n    (details && details.scope && details.scope.body) || token.text,\n    '',\n    {\n      token: {...token},\n      context: {...context},\n      ...details,\n    },\n  );\n};\n\nclass MarkoutOutput extends String {\n  constructor(context) {\n    super(context.renderedText).context = context;\n  }\n}\n\n/// Features\n\nconst createLookups = (\n  repeats = {['*']: 2, ['`']: 3, ['#']: 6},\n  entities = {['*']: '&#x2217;', ['`']: '&#x0300;'},\n  aliases = {'*': ['_'], '**': ['__'], '`': ['``']},\n  blocks = {['-']: 'li', ['>']: 'blockquote', ['#']: 'h*', ['```']: 'pre'},\n  spans = {['*']: 'i', ['**']: 'b', ['~~']: 's', ['`']: 'code'},\n  tags = ['<', '>', '<!--', '-->', '<?', '?>', '</', '/>'],\n  elements = {'markout-iframe': 'iframe', 'markout-details': 'details', 'markout-blockquote': 'blockquote'},\n) => {\n  const {keys} = Object;\n  const symbols = new Set([...Object.keys(repeats), ...Object.keys(entities)]);\n  for (const symbol of symbols) {\n    let n = repeats[symbol] || 1;\n    const entity = entities[symbol];\n    let block = blocks[symbol];\n    let span = spans[symbol];\n    const tag = block || span;\n    const map = (block && blocks) || (span && spans);\n    for (let i = 1; n--; i++) {\n      const k = symbol.repeat(i);\n      const b = blocks[k];\n      const s = spans[k];\n      const m = (b && blocks) || (s && spans) || map;\n      const t = (b || s || m[k] || tag).replace('*', i);\n      const e = entities[k] || (entity && entity.repeat(i));\n      m[k] = t;\n      e && (entities[k] = e);\n      if (k in aliases) for (const a of aliases[k]) (m[a] = t), e && (entities[a] = e);\n    }\n  }\n  for (let h = 1, c = 2080, n = 6; n--; entities['#'.repeat(h)] = `#<sup>&#x${c + h++};</sup>`);\n\n  const escapes = {};\n\n  for (const symbol of '* ^ ~ `'.split(' ')) {\n    escapes[`\\\\${symbol}`] = `&#x${symbol.charAt(0).toString(16)};`;\n  }\n\n  return {entities, blocks, spans, tags: new Set(tags), elements};\n};\n\nconst createSpanStack = context => {\n  const {\n    lookups: {spans},\n    renderer,\n  } = context;\n  const stack = [];\n  stack.open = (text, body, classes) => {\n    const {[text]: lastIndex, length: index} = stack;\n    if (lastIndex < 0) return (stack[text] = undefined); // ie continue\n    if (lastIndex >= 0) return stack.close(text, body, classes);\n    const span = spans[text];\n    const before = `<${span}${renderer.renderClasses(classes)}>`;\n    stack[text] = index;\n    stack.push({text, body, span, index});\n    return classes.push('opener'), before;\n  };\n  stack.close = (text, body, classes) => {\n    const span = spans[text];\n    const {[text]: index, length} = stack;\n    if (index === length - 1) {\n      index >= 0 && (stack.pop(), (stack[text] = undefined));\n      const after = `</${span}>`;\n      return classes.push('closer'), after;\n    } else if (index >= 0) {\n      classes.push('closer', `closer-token`);\n      const details = `token-type=\"auto\"${renderer.renderClasses(classes)}`;\n      const closing = stack.splice(index, length).reverse();\n      for (const {span, text, body} of closing) {\n        context.renderedText += `<tt punctuator=\"closer\" ${details}>${body}</tt></${span}>`;\n        stack[text] < index || (stack[text] = -1);\n      }\n    } else {\n      context.renderedText += text;\n    }\n  };\n  context.stack = stack;\n};\n\n/** @typedef {{text?: string, indent?: string, index: number}} match */\n/** @typedef {{href: string, title: string}} alias */\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n  // import.meta.url.includes('/markout/lib/') ||\n  typeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n  'block-normalization',\n  'paragraph-normalization',\n  'anchor-normalization',\n  'break-normalization',\n  'fenced-block-header-rendering',\n]);\n"],"names":["escape","matchAll","markup.render","markup.tokenize","markup.encodeEntity","markup.encodeEntities"],"mappings":"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"}